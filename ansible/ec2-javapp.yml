---
- name: Create a sandbox instance
  hosts: localhost
  gather_facts: False
  vars:
    keypair: sinensia-key
    instance_type: t2.micro
    security_group: ssh+http
    image: ami-0d71ea30463e0ff8d
    region: eu-west-1
  tasks:
    - name: Launch instance
      ec2:
        key_name: "{{ keypair }}"
        group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        vpc_subnet_id: subnet-08b5507d0a110f5ea
        assign_public_ip: yes
        instance_tags:
          Name: FormacionAWS-java
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
      loop: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 10
        sleep: 5
        timeout: 300
      loop: "{{ ec2.instances }}"
      vars:
        ansible_user: ec2-user

# add into build.gradle
# tasks.named('bootJar') {
#    launchScript()
# }

- name: Configure instance(s)
  hosts: launched
  vars:
    ansible_user: ec2-user
  become: True
  gather_facts: True
  tasks:
    - name: Install java
      become: true
      shell:  amazon-linux-extras install -y java-openjdk11

    - name: Copy java project
      copy:
        src: /home/sinensia/hello-springrest/restservice/build/libs/restservice-0.0.1-SNAPSHOT.jar
        dest: /var/myapp/
        mode: '0755'

    - name: Symlynk project
      become: true
      shell: ln -s /var/myapp/restservice-0.0.1-SNAPSHOT.jar /etc/init.d/myapp

    - name: Start as a service
      become: true
      service:
        name: myapp
        enabled: true
        state: started